# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main

pool:
  name: devops

stages:
  - stage: terraformvalidate
    jobs:
      - job: TerraformValidateJob
        continueOnError: false
        steps:
          - task: PublishPipelineArtifact@1
            displayName: Publish Artifacts
            inputs:
              targetPath: '$(System.DefaultWorkingDirectory)/01-terraform-mainfests-aks'
              artifact: 'terraform-manifests-out'
              publishLocation: 'pipeline'
          
          - task: Terraform@2
            displayName: Install Terraform and apply terraform init
            inputs:
              TemplatePath: '$(System.DefaultWorkingDirectory)/01-terraform-mainfests-aks'
              Arguments: 'init'
              InstallTerraform: true
              UseAzureSub: true
              ConnectedServiceNameSelector: 'ConnectedServiceNameARM'
              ConnectedServiceNameARM: 'terraform-azure-aks-svc-conn'
              ManageState: true
              SpecifyStorageAccount: true
              StorageAccountResourceGroup: 'terraform-storage-rg1'
              StorageAccountRM: 'terraformdevon1006'
              StorageContainerName: 'terraform'
          
          # - task: Terraform@2
          #   inputs:
          #     TemplatePath: '$(System.DefaultWorkingDirectory)/01-terraform-mainfests-aks'
          #     Arguments: 'validate'
          #     InstallTerraform: false
          #     UseAzureSub: false